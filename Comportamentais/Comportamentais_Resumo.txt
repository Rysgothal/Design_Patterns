[ Chain of Responsibility ]
	- Baixo acoplamento e alta coesão
	- Remover fortes dependencias 
	- Responsabilidade única 
	
[ Command ]
	- Encapsular requisições como Objeto
	- "Empilhar" vários comandos e executá-los de uma só vez somente quando necessário
	- Comandos atuam como "conexões" entre o cliente e as ações desejadas do Objeto
	
[ Interpreter ] 
	- Fornecer um dado de entrada e solicitar que o padrão de projeto execute as interpretações
	
	Elementos:
		TerminalExpression: Representa expressões independentes que podem avaliar a entrada de modo imediato.
		NonTerminalExpression: É composto por outras expressões para interpretar o contexto
	
	- TerminalExpression são como variáveis e NonTerminalExpression são semelhantes a operadores lógicos.

[ Iterator ]
	- Poder "transformar" uma classe em uma estrutura que permita a iteração dos dados processador por ela
	- Disponibilizar uma forma de percorrer uma lista(ou coleção) sem a necessidade de conhecer a representação dos dados
	- Padronizar mecanismo de navegação
	- imparcialidade dos tipos de dados carregados
	